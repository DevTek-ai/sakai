#macro(siteListItem $type $site $isExpanded)

    ## Remove those special site chars. They don't play well with html attributes.
    #set ($safeSiteId = $site.id.replace("!", "").replace("~", "").replace(".",""))

    #if ($type == "home")
        #set ($isExpanded = "true")
    #elseif ($site.isPinned)
        #set ($pinTitle = $rloader.sitenav_btn_unpin)
        #set ($pinIconClass = "si si-pin-fill")
    #else
        #set ($pinTitle = $rloader.sitenav_btn_pin)
        #set ($pinIconClass = "si si-pin")
    #end

    #if ($site.isCurrent)
        #set ($currentSiteClass = "is-current-site mt-2 fw-bold")
        #set ($isExpanded = $currentExpanded)
    #elseif ($type == "gateway")
        #set ($isExpanded = "true")
    #else
        #set ($currentSiteClass = "")
        #set ($isExpanded = "false")
    #end

    <li id="site-list-${type}-item-${safeSiteId}" class="site-list-item py-1 $!{currentSiteClass}" data-type="${type}" data-site="${site.id}">
        <div class="site-list-item-head d-flex align-items-center pe-2 py-1 w-100 justify-content-between #if ($type == 'home')d-none#end">
            <div class="site-link-block d-flex align-items-center rounded-end me-1 pe-2">
                <button class="btn icon-button collapsed me-1"
                        data-site-id="${site.id}"
                        data-bs-toggle="collapse"
                        data-bs-target="#${type}-site-${safeSiteId}-page-list"
                        aria-expanded="${isExpanded}"
                        title="#if ($isExpanded == 'true')$rloader.sitenav_collapse_tools#else$rloader.sitenav_expand_tools#end"
                        aria-controls="${type}-site-${safeSiteId}-page-list">
                    <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>

                #if ($site.isCurrent && ${sitePages.pageNavIconUrl} != "")
                    <img src="${sitePages.pageNavIconUrl}" alt="${rloader.sit_icon_alt}" class="img_site_toolmenu">
                #end

                #set ($siteTitle = $ftext.escapeHtml(${site.title}))
                #set ($displayTitle = $siteTitle)
                #if ( ( ${tabDisplayLabel} == 2 ) && ( ${site.shortDescription} ) )
                    #set ($displayTitle = $ftext.escapeHtml(${site.shortDescription}))
                #end
                <a href="$site.url" class="sidebar-site-title" title="${siteTitle}">${displayTitle}</a>

            </div>
            #if ($loggedIn && !${site.isHome})
                #if (!$site.isHidden)
                    <button class="d-inline-block p-1 site-opt-pin btn btn-transparent bi $!{pinIconClass}"
                        data-pin-site="${site.id}"
                        data-pinned="$!{site.isPinned}"
                        data-site-title="${siteTitle}"
                        title="${pinTitle}"
                        aria-label="${pinTitle}">
                    </button>
                #else
                    <span class="d-inline-block p-1 bi si si-eye-slash-fill"
                        title="$rloader.sitenav_btn_hide"
                        aria-label="$rloader.sitenav_btn_hide">
                    </span>
                #end
            #end
        </div>
       <div id="${type}-site-${safeSiteId}-page-list" data-site-id="${site.id}" class="site-list-item-collapse collapse #if ($isExpanded == 'true') show #end">
    <ul class="site-page-list nav flex-column py-1 mb-2">
    ## Parent dropdown select box added here at line 70
    ##if ($site.userType == "Parent")
        <li class="nav-item parent-select-container py-2 px-4 d-none">
            <select id="parent-select-${safeSiteId}" class="form-select parent-student-select" style="background-color: #A3E635; border-color: #A3E635;" aria-label="Select student to view">
                <option selected>Choose a student...</option>
                <option value="student1">John Smith</option>
                <option value="student2">Emma Johnson</option>
                <option value="student3">Michael Brown</option>
            </select>
        </li>
    ##end
    #if ($site.pages)
        ## Check if site has pages with type key
         #set ($hasCoursePages = false)
         #set ($hasProjectPages = false)
         #set ($hasAdminPages = false)
        #set ($hasDeptPages = false)
         #set ($coursePages = [])
         #set ($projectPages = [])
         #set ($adminPages = [])
         #set ($regularPages = [])
        #set ($deptPages = [])
        
      ## Sort pages into course, project, and regular
    #foreach ($page in $site.pages)

        #if ($page.type && $page.type.contains("course"))
            #set ($hasCoursePages = true)
            #set ($discard = $coursePages.add($page))
        #elseif ($page.type && $page.type.contains("project") && $page.properties.get('devtek-department-type') == 'school')
            #set ($hasProjectPages = true)
            #set ($discard = $projectPages.add($page))
        #elseif ($page.type && $page.type.contains("project") && $page.properties.get('devtek-department-type') == 'department')
            #set ($hasDeptPages = true)
            #set ($discard = $deptPages.add($page))
        #elseif ($page.isPinned)
            #set ($hasAdminPages = true)
            #set ($discard = $adminPages.add($page))
        #else
            #set ($discard = $regularPages.add($page))
        #end
    #end
        
        ## Display regular pages first
        #foreach ($page in $regularPages)
            #if ($site.isCurrent)
                #set ($pageUrl = $page.resetUrl)
            #else
                #set ($pageUrl = $page.url)
            #end
            #pageListItem ($page, $pageUrl, "${page.icon}", 4)
        #end
        
        ## If we have course pages, create a collapsible section for them
        #if ($hasCoursePages)
            <li class="nav-item course-pages-container">
                <button class="btn btn-nav w-100 ps-4 d-flex text-start align-items-center new-dropdowns" 
                        data-bs-toggle="collapse" 
                        data-bs-target="#course-pages-${safeSiteId}" 
                        aria-expanded="false" 
                        aria-controls="course-pages-${safeSiteId}">
                    <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                        <span class="me-2">Courses</span>
                    </div>
                  <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>
                <div class="collapse" id="course-pages-${safeSiteId}">
                    <ul class="nav flex-column">
                        #foreach ($page in $coursePages)
                            <li class="nav-item">
                                 <button class="btn btn-nav w-100 d-flex ps-5 text-start align-items-center new-dropdowns" 
                        data-bs-toggle="collapse" 
                        data-bs-target="#course-page-${safeSiteId}-${velocityCount}" 
                        aria-expanded="false" 
                        aria-controls="course-page-${safeSiteId}-${velocityCount}">
                    <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                        <span class="me-2 course-page-title">${page.title}</span>
                    </div>
                   <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>
                <div class="collapse" id="course-page-${safeSiteId}-${velocityCount}">
                                <ul class="nav flex-column">
                                    #foreach ($page_s in $page.pages)
                                        #if ($site.isCurrent)
                                            #set ($pageUrl = $page_s.resetUrl)
                                        #else
                                            #set ($pageUrl = $page_s.url)
                                        #end
                                        #pageListItem ($page_s, $pageUrl, "${page_s.icon}", 5)
                                    #end
                                </ul>
                                </div>
                            </li>
                        #end
                    </ul>
                </div>
            </li>
        #end
        ## If we have department pages, create a collapsible section for them
        #if ($hasDeptPages)
            <li class="nav-item dept-pages-container">
                <button class="btn btn-nav w-100 ps-4 d-flex text-start align-items-center new-dropdowns"
                        data-bs-toggle="collapse"
                        data-bs-target="#dept-pages-${safeSiteId}"
                        aria-expanded="false"
                        aria-controls="dept-pages-${safeSiteId}">
                    <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                        <span class="me-2">Department</span>
                    </div>
                    <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>
                <div class="collapse" id="dept-pages-${safeSiteId}">
                    <ul class="nav flex-column">
                        #foreach ($page in $deptPages)
                            <li class="nav-item">
                                <button class="btn btn-nav w-100 d-flex ps-5 text-start align-items-center new-dropdowns"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#dept-page-${safeSiteId}-${velocityCount}"
                                        aria-expanded="false"
                                        aria-controls="dept-page-${safeSiteId}-${velocityCount}">
                                    <div class="d-flex me-auto rounded-end">
                                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                                        <span class="me-2 dept-page-title">${page.title}</span>
                                    </div>
                                    <i class="bi bi-chevron-right" aria-hidden="true"></i>
                                </button>
                                <div class="collapse" id="dept-page-${safeSiteId}-${velocityCount}">
                                    <ul class="nav flex-column">
                                        #foreach ($page_s in $page.pages)
                                        #if ($site.isCurrent)
                                            #set ($pageUrl = $page_s.resetUrl)
                                        #else
                                            #set ($pageUrl = $page_s.url)
                                        #end
                                        #pageListItem ($page_s, $pageUrl, "${page_s.icon}", 5)
                                    #end
                                    </ul>
                                </div>
                            </li>
                        #end
                    </ul>
                </div>
            </li>
        #end
        ## If we have project pages, create a collapsible section for them
        #if ($hasProjectPages)
        <li class="nav-item project-pages-container">
            <button class="btn btn-nav w-100 ps-4 d-flex text-start align-items-center new-dropdowns" 
                    data-bs-toggle="collapse" 
                    data-bs-target="#project-pages-${safeSiteId}" 
                    aria-expanded="false" 
                    aria-controls="project-pages-${safeSiteId}">
                <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                    <span class="me-2">Schools</span>
                </div>
              <i class="bi bi-chevron-right" aria-hidden="true"></i>
            </button>
            <div class="collapse" id="project-pages-${safeSiteId}">
                <ul class="nav flex-column">
                    #foreach ($page in $projectPages)
                        <li class="nav-item">
                                 <button class="btn btn-nav w-100 d-flex ps-5 text-start align-items-center new-dropdowns" 
                        data-bs-toggle="collapse" 
                        data-bs-target="#project-page-${safeSiteId}-${velocityCount}" 
                        aria-expanded="false" 
                        aria-controls="project-page-${safeSiteId}-${velocityCount}">
                    <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                        <span class="me-2 project-page-title">${page.title}</span>
                    </div>
                   <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>
                <div class="collapse" id="project-page-${safeSiteId}-${velocityCount}">
                                <ul class="nav flex-column">
                                    #foreach ($page_s in $page.pages)
                                        #if ($site.isCurrent)
                                            #set ($pageUrl = $page_s.resetUrl)
                                        #else
                                            #set ($pageUrl = $page_s.url)
                                        #end
                                        #pageListItem ($page_s, $pageUrl, "${page_s.icon}", 5)
                                    #end
                                </ul>
                                </div>
                            </li>
                    #end
                </ul>
            </div>
        </li>
        #end
        #if ($hasAdminPages)
          <li class="nav-item admin-pages-container">
            <button class="btn btn-nav w-100 ps-4 d-flex text-start align-items-center new-dropdowns" 
                    data-bs-toggle="collapse" 
                    data-bs-target="#admin-pages-${safeSiteId}" 
                    aria-expanded="false" 
                    aria-controls="admin-pages-${safeSiteId}">
                <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                    <span class="me-2">Other</span>
                </div>
              <i class="bi bi-chevron-right" aria-hidden="true"></i>
            </button>
             <div class="collapse" id="admin-pages-${safeSiteId}">
                    <ul class="nav flex-column">
                        #foreach ($page in $adminPages)
                            <li class="nav-item">
                                 <button class="btn btn-nav w-100 d-flex ps-5 text-start align-items-center new-dropdowns" 
                        data-bs-toggle="collapse" 
                        data-bs-target="#admin-page-${safeSiteId}-${velocityCount}" 
                        aria-expanded="false" 
                        aria-controls="admin-page-${safeSiteId}-${velocityCount}">
                    <div class="d-flex me-auto rounded-end">
                        <i class="me-1 si si-sakai-preferences" aria-hidden="true"></i>
                        <span class="me-2 admin-page-title">${page.title}</span>
                    </div>
                   <i class="bi bi-chevron-right" aria-hidden="true"></i>
                </button>
                <div class="collapse" id="admin-page-${safeSiteId}-${velocityCount}">
                                <ul class="nav flex-column">
                                    #foreach ($page_s in $page.pages)
                                        #if ($site.isCurrent)
                                            #set ($pageUrl = $page_s.resetUrl)
                                        #else
                                            #set ($pageUrl = $page_s.url)
                                        #end
                                        #pageListItem ($page_s, $pageUrl, "${page_s.icon}", 5)
                                    #end
                                </ul>
                                </div>
                            </li>
                        #end
                    </ul>
                </div>
        </li>
         #end
    #else
        ## Original code for when site.pages is not available
        #foreach ($page in $site.pages)
            #if ($site.isCurrent)
                #set ($pageUrl = $page.resetUrl)
            #else
                #set ($pageUrl = $page.url)
            #end
            #pageListItem ($page, $pageUrl, "${page.icon}", 4)
        #end
    #end
    </ul>
</div>
    </li>
#end

#macro( pageListItem $page $url $icon $indentation)
    
    <li class="nav-item">
        <a class="btn btn-nav w-100 ps-${indentation} #if ($activePageId == $page.id)selected-page#end" data-page-id="${page.id}"
                href="$!{url}"
                title="${page.title}: ${page.description}">
            <div class="d-flex text-start align-items-center">
                <div class="d-flex me-auto rounded-end">
                    <i class="me-1 $!{icon}" aria-hidden="true"></i>
                    <span class="me-2">${page.title}</span>
                </div>
                <div class="me-1">
                #if ($page.hidden)
                    <i class="si si-hidden"></i>
                #end
                #if ($page.locked)
                    <i class="si si-locked"></i>
                #end
                </div>
            </div>
        </a>
    </li>
#end

<!-- START VM includeSiteNav.vm -->
<aside id="portal-nav-sidebar" class="d-none portal-nav-sidebar overflow-auto #if (${sidebarCollapsed})sidebar-collapsed#end" tabindex="-1" data-bs-backdrop="true" aria-labelledby="">
    <div class="offcanvas-header d-md-none">
        <h2 class="offcanvas-title">${rloader.sitenav_title}</h2>
        <button type="button" class="btn-close text-reset ms-auto" data-bs-dismiss="offcanvas" aria-label="Close the sites sidebar"></button>
    </div>
    <nav id="toolMenu" role="navigation" aria-label="${rloader.sit_toolshead}" class="Mrphs-toolsNav__menu sakai-sitesAndToolsNav h-100 d-flex flex-column">
        <h2 class="visually-hidden d-none d-md-block" id="totoolmenu">${rloader.sitenav_title}</h2>
        #if (${userIsLoggedIn})
            <div class="sites-section">
                <ul class="mb-0">
                    #siteListItem("home", $sidebarSites.homeSite, false)
                </ul>
            </div>
            <div class="sites-section pinned-site-section d-none">
                <h3 class="sites-section-heading #if (! $showSiteLabels) d-none #end">${rloader.sitenav_title_pinned}</h3>
                <ul id="pinned-site-list" class="mb-0 #if ($sidebarSites.pinnedSites.empty)d-none#end">
                    #foreach ($site in $sidebarSites.pinnedSites)
                        #siteListItem("pinned", $site, false)
                    #end
                </ul>
                #if (${showSiteLabels})
                <div id="sites-no-pinned-label" class="ms-3 #if ($sidebarSites.pinnedSites.empty) d-block #else d-none #end">${rloader.sitenav_no_pinned}</div>
                #else
                <span id="sites-no-pinned-label"></span>
                #end
            </div>
            <div class="sites-section d-none #if ($sidebarSites.recentSites.empty)d-none#end">
                <h3 class="sites-section-heading #if (! $showSiteLabels) d-none #end">${rloader.sitenav_title_recent}</h3>
                <ul id="recent-site-list" class="mb-0">
                    #foreach ($site in $sidebarSites.recentSites)
                        #siteListItem("recent", $site, false)
                    #end
                </ul>
            </div>
        #else
            #if ($sidebarSites.gatewaySite)
                <div class="sites-section">
                    <h3 class="visually-hidden sites-section-heading">${rloader.sitenav_title_current}</h3>
                    <ul class="pt-2 mb-0">
                        #siteListItem("gateway", $sidebarSites.gatewaySite, true)
                    </ul>
                </div>
            #end
        #end
    </nav>

</aside>

<script>
    // focus the current tool on load and prepare site description popovers
    window.addEventListener('load', () => {
        document.querySelector('.selected-page')?.scrollIntoView({behavior:'auto', block: 'center'});

        // put the focus back on the portal wrapper so that keyboard navigation works
        setTimeout(function() {
            // Preserve focus on login fields if they're currently active
            if (!["eid", "pw"].includes(document.activeElement?.id)) {
                document.querySelector('.Mrphs-portalWrapper').focus();
            }
        }, 50);

        [...document.querySelectorAll('[data-bs-toggle="popover"]')].forEach((el) => {
            let opts = {
                animation: false,
            };
            if (el.hasAttribute('data-bs-content-id')) {
	        opts.content = document.getElementById(el.getAttribute('data-bs-content-id')).innerHTML;
	        opts.html = true;
                new bootstrap.Popover(el, opts);
            }
        })
    });
    document.addEventListener('DOMContentLoaded', () => {
        // Select all elements containing page titles
        const pageTitleElements = document.querySelectorAll('.course-page-title');

        pageTitleElements.forEach(element => {
            const originalText = element.textContent.trim();
            if (originalText.length > 10) {
                element.textContent = originalText.substring(0, 10) + '...';
            }
        });
    });
</script>

<script>

    // focus the current tool on load and prepare site description popovers

    window.addEventListener('load', () => {

        document.querySelector('.selected-page')?.scrollIntoView({behavior:'auto', block: 'center'});



        // put the focus back on the portal wrapper so that keyboard navigation works

        setTimeout(function() {

            // Preserve focus on login fields if they're currently active

            if (!["eid", "pw"].includes(document.activeElement?.id)) {

                document.querySelector('.Mrphs-portalWrapper').focus();

            }

        }, 50);



        [...document.querySelectorAll('[data-bs-toggle="popover"]')].forEach((el) => {

            let opts = {

                animation: false,

            };

            if (el.hasAttribute('data-bs-content-id')) {

            opts.content = document.getElementById(el.getAttribute('data-bs-content-id')).innerHTML;

            opts.html = true;

                new bootstrap.Popover(el, opts);

            }

        });



        // Handle chevron icon toggle for dropdown buttons

        const collapsibleButtons = document.querySelectorAll('[data-bs-toggle="collapse"]');

       

        // Initialize icons based on expanded state

        collapsibleButtons.forEach(button => {

            const chevronIcon = button.querySelector('.bi-chevron-right');

            if (chevronIcon) {

                const isExpanded = button.getAttribute('aria-expanded') === 'true';

                if (isExpanded) {

                    chevronIcon.classList.remove('bi-chevron-right');

                    chevronIcon.classList.add('bi-chevron-down');

                }

            }

        });

       

        // Add event listeners to toggle icons on click

        collapsibleButtons.forEach(button => {

            button.addEventListener('click', function() {

                const chevronIcon = this.querySelector('.bi');

                if (chevronIcon) {

                    if (chevronIcon.classList.contains('bi-chevron-right')) {

                        chevronIcon.classList.remove('bi-chevron-right');

                        chevronIcon.classList.add('bi-chevron-down');

                    } else {

                        chevronIcon.classList.remove('bi-chevron-down');

                        chevronIcon.classList.add('bi-chevron-right');

                    }

                }

            });

        });

    });

   

    document.addEventListener('DOMContentLoaded', () => {

        // Select all elements containing page titles

        const pageTitleElements = document.querySelectorAll('.course-page-title');



        pageTitleElements.forEach(element => {

            const originalText = element.textContent.trim();

            if (originalText.length > 10) {

                element.textContent = originalText.substring(0, 10) + '...';

            }

        });

    });

</script>

<!-- END VM includeSiteNav.vm -->
